doctype html
html
  head
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(charset='utf-8')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js')
    script.
      function del(var data)
      {
      console.log(data);
      //   $.ajax({
      //     async: true,
      //     url: "/api/v2/card/addmoneyID",
      //     method: "POST",
      //     headers: {
      //         "Content-Type": "application/json",
      //         "Authorization": "Bearer " + token,
      //         "cache-control": "no-cache",
      //     },
      //     processData: false,
      //     data: JSON.stringify(data),
      //     success: function (res, textStatus, xmLHttpRequest) {
      //         $('#loading-wrapper').prop('hidden', true);
      //         swal({ text: "Money Added Successfully! Current Balance : " + res.balance + ' Rs.', closeOnClickOutside: false, icon: "success", }).then(function () {
      //             location.reload();
      //         });
      //     },
      //     error: function (xhr, ajaxOptions, thrownError) {
      //         $('#maincontent').prop('hidden', false);
      //         $('#loading-wrapper').prop('hidden', true);
      //         swal(xhr.responseJSON.message, '', "error");
      //         $('#sub').removeAttr('disabled');
      //     }
      // });
      }
    style.
      * {
      box-sizing: border-box;
      }
      #myInput {
      background-image: url('/css/searchicon.png');
      background-position: 10px 10px;
      background-repeat: no-repeat;
      width: 100%;
      font-size: 16px;
      padding: 12px 20px 12px 40px;
      border: 1px solid #ddd;
      margin-bottom: 12px;
      }
      #myTable {
      border-collapse: collapse;
      width: 100%;
      border: 1px solid #ddd;
      font-size: 18px;
      }
      #myTable th, #myTable td {
      text-align: left;
      padding: 12px;
      }
      #myTable tr {
      border-bottom: 1px solid #ddd;
      }
      #myTable tr.header, #myTable tr:hover {
      background-color: #f1f1f1;
      }
      h1{
      text-align: center;
      color:#F1E1D1/*#E6935F*/;
      background-color:#000000;
      padding: 5px;
      }
  body
    form(method='post')
      h1 Customer Details
      input#myInput(type='text', onkeyup='myFunction()', placeholder='Search for Accounts..', title='Type in a name')
      table#myTable
        tbody
          tr.header
            th Account
            th Amount
            th Transaction type
            th Date
        each item in result    
          tr 
            td(name='x') #{item.to_account}
            td #{item.tx_amount}
            td #{item.cred_deb}
            td #{item.date}
        each item in result1    
          tr 
            td(name='x') #{item.to_account}
            td #{item.tx_amount}
            td #{'Credit'}
            td #{item.date}        
      script.
        function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0];
        if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
        } else {
        tr[i].style.display = "none";
        }
        }
        }
        }
        var ProductDelete = Vue.extend({
        template: '#product-delete',
        data: function () {
        return {product: findProduct(this.$route.params.product_id)};
        },
        methods: {
        deleteProduct: function () {
        products.splice(findProductKey(this.$route.params.product_id), 1);
        router.go('/');
        }
        }
        });
        function findProduct (productId) {
        return products[findProductKey(productId)];
        };
        function findProductKey (productId) {
        for (var key = 0; key < products.length; key++) {
        if (products[key].id == productId) {
        return key;
        }
        }
        };
      template#product-delete
        h2 Delete product {{ product.name }}
        p The action cannot be undone.
        button.btn.btn-danger(type='submit') Delete
        a.btn.btn-default(v-link="'/'") Cancel
